{"version":3,"sources":["../../src/config/cache.js"],"names":["redis","require","config","client","createClient","host","process","env","REDIS_URL","port","REDIS_PORT","password","REDIS_PASSWORD","getUser","address","get","toLowerCase","err","value","JSON","parse","save","data","set","stringify","on","er","logger","error","stack"],"mappings":";;;;;;;;;;;;;;;AACA;;;;;;AADA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAEA;AACO,IAAMC,0BAASH,MAAMI,YAAN,CAAmB;AACvCC,QAAMC,QAAQC,GAAR,CAAYC,SADqB;AAEvCC,QAAMH,QAAQC,GAAR,CAAYG,UAFqB;AAGvCC,YAAUL,QAAQC,GAAR,CAAYK;AAHiB,CAAnB,CAAf;;AAMP;AACO,IAAMC,4BAAU,SAAVA,OAAU,CAACC,OAAD,EAAa;AAClCX,SAAOY,GAAP,CAAWD,QAAQE,WAAR,EAAX;AAAA,wFAAkC,iBAAOC,GAAP,EAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC5BD,GAD4B;AAAA;AAAA;AAAA;;AAAA,+CAEvB,CAFuB;;AAAA;AAAA,oBAGtBC,UAAU,IAHY;AAAA;AAAA;AAAA;;AAAA,+CAIvB,CAJuB;;AAAA;AAAA,+CAMvBC,KAAKC,KAAL,CAAWF,KAAX,CANuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AASD,CAVM;;AAYA,IAAMG,sBAAO,SAAPA,IAAO,CAACP,OAAD,EAAUQ,IAAV,EAAmB;AACrCnB,SAAOoB,GAAP,CAAWT,OAAX,EAAoBK,KAAKK,SAAL,CAAeF,IAAf,CAApB,EAA0C,IAA1C,EAAgD,KAAK,EAAL,GAAU,EAA1D,EAA8D,UAACL,GAAD,EAAS;AACrE,QAAIA,GAAJ,EAAS;AACP,YAAMA,GAAN;AACD;AACF,GAJD;AAKD,CANM;;AAQPd,OAAOsB,EAAP,CAAU,OAAV,EAAmB,UAAUC,EAAV,EAAc;AAC/BC,oBAAOC,KAAP,CAAaF,GAAGG,KAAhB,EAD+B,CACR;AACxB,CAFD","file":"cache.js","sourcesContent":["const redis = require('redis');\nimport logger from './winston';\nrequire('dotenv').config();\n\n// exposing credentials cuz its the weekend and i dont care\nexport const client = redis.createClient({\n  host: process.env.REDIS_URL,\n  port: process.env.REDIS_PORT,\n  password: process.env.REDIS_PASSWORD\n});\n\n// not yet implemented\nexport const getUser = (address) => {\n  client.get(address.toLowerCase(), async (err,value) => {\n    if (err) {\n      return 0\n    } else if(value === null) {\n      return 1\n    } else {\n      return JSON.parse(value);\n    }\n  });\n}\n\nexport const save = (address, data) => {\n  client.set(address, JSON.stringify(data), 'EX', 60 * 60 * 12, (err) => {\n    if (err) {\n      throw err;\n    }\n  });\n}\n\nclient.on('error', function (er) {\n  logger.error(er.stack) // [2]\n})\n"]}