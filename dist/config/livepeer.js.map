{"version":3,"sources":["../../src/config/livepeer.js"],"names":["Lokka","require","Transport","client","transport","query","fetchData","address","sdk","rpc","getDelegator","toLowerCase","user","vars","delegator"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;;;AACA,IAAMA,QAAQC,QAAQ,OAAR,EAAiBD,KAA/B;AACA,IAAME,YAAYD,QAAQ,sBAAR,EAAgCC,SAAlD;;AAEA,IAAMC,SAAS,IAAIH,KAAJ,CAAU;AACvBI,aAAW,IAAIF,SAAJ,CAAc,oEAAd;AADY,CAAV,CAAf;;AAIA,IAAMG,oMAAN;;AAaO,IAAMC;AAAA,sFAAY,iBAAOC,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACL,oBADK;;AAAA;AACjBC,eADiB;AAEfC,eAFe,GAEPD,GAFO,CAEfC,GAFe;AAAA;AAAA,mBAGJA,IAAIC,YAAJ,CAAiBH,QAAQI,WAAR,EAAjB,CAHI;;AAAA;AAGjBC,gBAHiB;AAKjBC,gBALiB,GAKV;AACXN,uBAASK,KAAKL;AADH,aALU;AAAA;AAAA,mBASKJ,OAAOE,KAAP,CAAaA,KAAb,EAAoBQ,IAApB,CATL;;AAAA;AAAA;AASfC,qBATe,SASfA,SATe;AAAA,wEAWXF,IAXW,EAWFE,SAXE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA,GAAN","file":"livepeer.js","sourcesContent":["import LivepeerSDK from '@livepeer/sdk';\nconst Lokka = require('lokka').Lokka;\nconst Transport = require('lokka-transport-http').Transport;\n\nconst client = new Lokka({\n  transport: new Transport('https://api.thegraph.com/subgraphs/name/adamsoffer/livepeer-canary')\n});\n\nconst query = `\n  query User($address: String!) {\n    delegator(first: 1, id: $address) {\n      shares {\n        rewardTokens\n        round {\n          timestamp\n        }\n      }\n    }\n  }\n`\n\nexport const fetchData = async (address) => {\n  const sdk = await LivepeerSDK();\n  const { rpc } = sdk;\n  const user = await rpc.getDelegator(address.toLowerCase());\n\n  const vars = {\n    address: user.address\n  }\n\n  const { delegator } = await client.query(query, vars)\n\n  return { ...user, ...delegator }\n}"]}